# -*- coding: utf-8 -*-
"""clean_sales_data.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12N5S-K9pYY7kJ1WtLQcI-XyCDdJ7Taap
"""

import pandas as pd
import matplotlib.pyplot as plt
from google.colab import files

# 1. Upload raw Excel file
uploaded = files.upload()

# 2. Load the file
df = pd.read_excel("sales_data_raw.xlsx")
df.columns = df.columns.str.strip().str.lower()

# 3. Clean Date column
df['date'] = df['date'].astype(str).str.strip().replace("nan", None)
df['date'] = pd.to_datetime(df['date'], errors='coerce', infer_datetime_format=True, dayfirst=False)
df['date'] = df['date'].fillna(pd.Timestamp("2025-01-01"))

# 4. Clean TotalPrice
df['totalprice'] = df['totalprice'].astype(str).str.replace("$","",regex=False).str.strip().astype(float)

# 5. Fill missing values
df['region'] = df['region'].fillna("Unknown")
df['product'] = df['product'].fillna("Not Specified")

# 6. Remove duplicates
df = df.drop_duplicates()

# 7. Calculated column
df['calculated_total'] = df['quantity'] * df['unitprice']

# 8. Save cleaned Excel
output_file = "sales_data_cleaned.xlsx"
df.to_excel(output_file, index=False)
files.download(output_file)
print("âœ… Data cleaning complete! Cleaned file is ready for download.")

# =============================
# ðŸ“Š Visualization & Save Charts
# =============================

# Sales by Region
region_sales = df.groupby('region')['totalprice'].sum().sort_values(ascending=False)
plt.figure(figsize=(8,5))
region_sales.plot(kind='bar', color='skyblue', edgecolor='black')
plt.title("Sales by Region")
plt.ylabel("Total Sales ($)")
plt.xlabel("Region")
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("sales_by_region.png")  # Save chart as image
plt.show()

# Top 5 Products by Sales
top_products = df.groupby('product')['totalprice'].sum().sort_values(ascending=False).head(5)
plt.figure(figsize=(8,5))
top_products.plot(kind='bar', color='orange', edgecolor='black')
plt.title("Top 5 Products by Sales")
plt.ylabel("Total Sales ($)")
plt.xlabel("Product")
plt.xticks(rotation=45)
plt.tight_layout()
plt.savefig("top5_products.png")  # Save chart as image
plt.show()

# Sales Trend Over Time
sales_trend = df.groupby('date')['totalprice'].sum().sort_index()
plt.figure(figsize=(10,5))
sales_trend.plot(kind='line', marker='o', color='green')
plt.title("Sales Trend Over Time")
plt.ylabel("Total Sales ($)")
plt.xlabel("Date")
plt.grid(True)
plt.tight_layout()
plt.savefig("sales_trend_over_time.png")  # Save chart as image
plt.show()

# Optional: Download chart images to local
files.download("sales_by_region.png")
files.download("top5_products.png")
files.download("sales_trend_over_time.png")